services:
  backend:
    build:
      context: ./backend
    container_name: raspi_backend
    volumes:
      - ./backend:/app
    working_dir: /app
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - backend_net
    command: ["air"]

  frontend:
    # make sure to use platform arm64
    platform: linux/arm64
    build:
      context: ./frontend
    container_name: raspi_frontend
    volumes:
      - ./frontend:/app:cached
      # /app/node_modules はホストと分離されたコンテナ専用の node_modules を維持するために必要
      # ただし、一度ビルドした古い node_modules がこの volume に残っていると、
      # Dockerfile で更新された依存が反映されず、古いバージョンが使われる可能性がある
      # ⇒ 必要に応じて `docker compose down -v` で volume を削除すること
      - /app/node_modules
    working_dir: /app
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - backend_net
    command: npm run dev -- --host

  db:
    image: postgres:15-alpine
    container_name: raspi_db
    environment:
      POSTGRES_DB: raspi
      POSTGRES_USER: raspi_user
      POSTGRES_PASSWORD: raspi_pass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend_net

  migrate:
    image: migrate/migrate
    volumes:
      - ./backend/migrations:/migrations
    depends_on:
      - db
    networks:
      - backend_net

volumes:
  pgdata:

networks:
  backend_net:
