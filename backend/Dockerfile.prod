# build stage
FROM golang:1.24.4-alpine AS build
WORKDIR /app
RUN apk add --no-cache ca-certificates git wget

# 依存取得 & ビルド
COPY go.mod go.sum ./
RUN go mod download
COPY . .
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o server .

# マイグレーションを同梱（レポジトリの位置に合わせてパス調整）
# この Dockerfile が ./backend/Dockerfile.prod なら、下記でOK
# （リポジトリ内に backend/migrations がある前提）
RUN mkdir -p /app/migrations
COPY ./migrations /app/migrations

# ★ ここで migrate をインストール（固定バージョン）
RUN GOBIN=/usr/local/bin go install github.com/golang-migrate/migrate/v4/cmd/migrate@v4.17.1

# run stage
FROM alpine:latest
RUN apk add --no-cache ca-certificates tzdata
WORKDIR /app

# 実行物と migrations / migrate をコピー
COPY --from=build /app/server /app/server
COPY --from=build /app/migrations /app/migrations
COPY --from=build /usr/local/bin/migrate /usr/local/bin/migrate

ENV GIN_MODE=release
ENV PORT=3000

# 本番は非root
RUN adduser -D -g '' appuser
USER appuser

EXPOSE 3000
ENTRYPOINT ["/app/server"]

