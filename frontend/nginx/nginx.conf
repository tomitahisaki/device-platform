# メインのNginx設定ファイル
# プロセス実行ユーザー（Dockerコンテナ内では通常nginx）
user nginx;

# ワーカープロセス数（CPUコア数に合わせる）
worker_processes auto;

# エラーログの出力先と詳細レベル
error_log /var/log/nginx/error.log warn;

# プロセスIDファイルの場所
pid /var/run/nginx.pid;

# イベント処理設定
events {
    # 1つのワーカープロセスが同時に処理できる接続数
    worker_connections 1024;
    
    # epollを使用（Linuxで効率的なI/O多重化）
    use epoll;
    
    # 複数のリクエストを一度に受け入れる
    multi_accept on;
}

# HTTP設定ブロック
http {
    # MIMEタイプの設定ファイルを読み込み
    include /etc/nginx/mime.types;
    
    # デフォルトのMIMEタイプ
    default_type application/octet-stream;
    
    # ログフォーマット設定
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # アクセスログの出力先
    access_log /var/log/nginx/access.log main;
    
    # 効率的なファイル転送の有効化
    sendfile on;
    
    # sendfile使用時のTCP_NOPUSHオプション
    tcp_nopush on;
    
    # keep-alive接続のタイムアウト時間
    keepalive_timeout 65;
    
    # TCP_NODELAYの有効化（小さなパケットの即座送信）
    tcp_nodelay on;
    
    # gzip圧縮の有効化（転送量削減）
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # セキュリティヘッダー
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # サーバー設定ファイルを読み込み
    include /etc/nginx/conf.d/*.conf;
}
